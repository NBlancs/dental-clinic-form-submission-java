/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package org.openjfx.dental.clinic.form.submission.java.application;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import javax.swing.JOptionPane;
import static org.openjfx.dental.clinic.form.submission.java.application.login_frm_patient.driver;
import static org.openjfx.dental.clinic.form.submission.java.application.login_frm_patient.password;
import static org.openjfx.dental.clinic.form.submission.java.application.login_frm_patient.url;
import static org.openjfx.dental.clinic.form.submission.java.application.login_frm_patient.username;
/**
 *
 * @author User
 */
public class patient_fillup_form_frm extends javax.swing.JFrame {

    /**
     * Creates new form patient_fillup_form_frm
     */
    public patient_fillup_form_frm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fnametxt = new javax.swing.JTextField();
        lnametxt = new javax.swing.JTextField();
        minitialtxt = new javax.swing.JTextField();
        agetxt = new javax.swing.JTextField();
        gendercb = new javax.swing.JComboBox<>();
        streetaddresstxt = new javax.swing.JTextField();
        municipalitytxt = new javax.swing.JTextField();
        citytxt = new javax.swing.JTextField();
        provincetxt = new javax.swing.JTextField();
        zipcodetxt = new javax.swing.JTextField();
        medicalcomplicationstxt = new javax.swing.JTextField();
        patientclassificationcb = new javax.swing.JComboBox<>();
        typeofservicetxt = new javax.swing.JTextField();
        submitbtn = new javax.swing.JButton();
        aboutbtn = new javax.swing.JButton();
        fillupbtn = new javax.swing.JButton();
        logoutbtn = new javax.swing.JButton();
        bg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1280, 832));
        setMinimumSize(new java.awt.Dimension(1280, 832));
        setPreferredSize(new java.awt.Dimension(1280, 832));
        getContentPane().setLayout(null);

        fnametxt.setBorder(null);
        fnametxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fnametxtActionPerformed(evt);
            }
        });
        getContentPane().add(fnametxt);
        fnametxt.setBounds(350, 230, 235, 23);

        lnametxt.setBorder(null);
        getContentPane().add(lnametxt);
        lnametxt.setBounds(630, 230, 240, 23);

        minitialtxt.setBorder(null);
        minitialtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minitialtxtActionPerformed(evt);
            }
        });
        getContentPane().add(minitialtxt);
        minitialtxt.setBounds(920, 230, 240, 23);

        agetxt.setBorder(null);
        agetxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agetxtActionPerformed(evt);
            }
        });
        getContentPane().add(agetxt);
        agetxt.setBounds(350, 320, 235, 22);

        gendercb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));
        gendercb.setBorder(null);
        gendercb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gendercbActionPerformed(evt);
            }
        });
        getContentPane().add(gendercb);
        gendercb.setBounds(630, 315, 230, 20);

        streetaddresstxt.setBorder(null);
        getContentPane().add(streetaddresstxt);
        streetaddresstxt.setBounds(920, 318, 240, 16);

        municipalitytxt.setBorder(null);
        municipalitytxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                municipalitytxtActionPerformed(evt);
            }
        });
        getContentPane().add(municipalitytxt);
        municipalitytxt.setBounds(350, 408, 235, 16);

        citytxt.setBorder(null);
        citytxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                citytxtActionPerformed(evt);
            }
        });
        getContentPane().add(citytxt);
        citytxt.setBounds(630, 407, 240, 16);

        provincetxt.setBorder(null);
        provincetxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                provincetxtActionPerformed(evt);
            }
        });
        getContentPane().add(provincetxt);
        provincetxt.setBounds(920, 403, 240, 16);

        zipcodetxt.setBorder(null);
        zipcodetxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zipcodetxtActionPerformed(evt);
            }
        });
        getContentPane().add(zipcodetxt);
        zipcodetxt.setBounds(350, 495, 235, 16);

        medicalcomplicationstxt.setBorder(null);
        medicalcomplicationstxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                medicalcomplicationstxtActionPerformed(evt);
            }
        });
        getContentPane().add(medicalcomplicationstxt);
        medicalcomplicationstxt.setBounds(630, 495, 240, 20);

        patientclassificationcb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Walk-in", "Appointment", "Insurance" }));
        patientclassificationcb.setBorder(null);
        patientclassificationcb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientclassificationcbActionPerformed(evt);
            }
        });
        getContentPane().add(patientclassificationcb);
        patientclassificationcb.setBounds(920, 495, 230, 20);

        typeofservicetxt.setBorder(null);
        typeofservicetxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeofservicetxtActionPerformed(evt);
            }
        });
        getContentPane().add(typeofservicetxt);
        typeofservicetxt.setBounds(350, 582, 235, 16);

        submitbtn.setBackground(new java.awt.Color(75, 148, 242));
        submitbtn.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        submitbtn.setForeground(new java.awt.Color(255, 255, 255));
        submitbtn.setText("Submit");
        submitbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitbtnActionPerformed(evt);
            }
        });
        getContentPane().add(submitbtn);
        submitbtn.setBounds(622, 560, 548, 50);

        aboutbtn.setBackground(new java.awt.Color(75, 148, 242));
        aboutbtn.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        aboutbtn.setForeground(new java.awt.Color(255, 255, 255));
        aboutbtn.setText("About");
        aboutbtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        aboutbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutbtnActionPerformed(evt);
            }
        });
        getContentPane().add(aboutbtn);
        aboutbtn.setBounds(22, 162, 182, 46);

        fillupbtn.setBackground(new java.awt.Color(75, 148, 242));
        fillupbtn.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        fillupbtn.setForeground(new java.awt.Color(255, 255, 255));
        fillupbtn.setText("Fill Up Form");
        fillupbtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        fillupbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fillupbtnActionPerformed(evt);
            }
        });
        getContentPane().add(fillupbtn);
        fillupbtn.setBounds(22, 243, 182, 46);

        logoutbtn.setBackground(new java.awt.Color(75, 148, 242));
        logoutbtn.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        logoutbtn.setForeground(new java.awt.Color(255, 255, 255));
        logoutbtn.setText("Logout");
        logoutbtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        logoutbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutbtnActionPerformed(evt);
            }
        });
        getContentPane().add(logoutbtn);
        logoutbtn.setBounds(36, 670, 155, 46);

        bg.setIcon(new javax.swing.JLabel() {
            public javax.swing.Icon getIcon() {
                try {
                    return new javax.swing.ImageIcon(
                        new java.net.URL("file:/C:/Users/User/Documents/NetBeansProjects/dental-clinic-form-submission-java-application/src/dentalclinic-bg-frms/patient-fillup-form-frm.png")
                    );
                } catch (java.net.MalformedURLException e) {
                }
                return null;
            }
        }.getIcon());
        getContentPane().add(bg);
        bg.setBounds(0, 0, 1280, 832);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void fnametxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fnametxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fnametxtActionPerformed

    private void medicalcomplicationstxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_medicalcomplicationstxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_medicalcomplicationstxtActionPerformed

    private void patientclassificationcbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientclassificationcbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patientclassificationcbActionPerformed

    private void typeofservicetxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeofservicetxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_typeofservicetxtActionPerformed

    private void municipalitytxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_municipalitytxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_municipalitytxtActionPerformed

    private void minitialtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minitialtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_minitialtxtActionPerformed

    private void gendercbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gendercbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gendercbActionPerformed

    private void citytxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_citytxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_citytxtActionPerformed

    private void provincetxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_provincetxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_provincetxtActionPerformed

    private void zipcodetxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zipcodetxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_zipcodetxtActionPerformed

    private void agetxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agetxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_agetxtActionPerformed

    private void submitbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitbtnActionPerformed
        // TODO add your handling code here:
        String fnameinput = fnametxt.getText();
        String lnameinput = lnametxt.getText();
        String minitialinput = minitialtxt.getText();
        String ageinput = agetxt.getText();
        String genderinput= (String)gendercb.getSelectedItem();
        String streetaddressinput = streetaddresstxt.getText();
        String municipalityinput = municipalitytxt.getText();
        String cityinput = citytxt.getText();
        String provinceinput = provincetxt.getText();        
        String zipcodeinput = zipcodetxt.getText();        
        String medicalcomplicationsinput  = medicalcomplicationstxt.getText();      
        String patientclassificationinput = (String) patientclassificationcb.getSelectedItem();       
        String typeofserviceinput = typeofservicetxt.getText();
                
        if (fnameinput.isEmpty() || lnameinput.isEmpty() || minitialinput.isEmpty() || ageinput.isEmpty()
                || genderinput.isEmpty() || streetaddressinput.isEmpty() || municipalityinput.isEmpty()
                || cityinput.isEmpty() || provinceinput.isEmpty() || zipcodeinput.isEmpty()
                || medicalcomplicationsinput.isEmpty() || patientclassificationinput.isEmpty()
                || typeofserviceinput.isEmpty()) {

            JOptionPane.showMessageDialog(this, "Please fill in all the fields", "Dialog", JOptionPane.ERROR_MESSAGE);
            return;
}
        
        try {
            Class.forName(driver);
            Connection con = DriverManager.getConnection(url, username, password);
            
            String sql = "INSERT INTO patient (fname,lname,minitial,age,gender,streetAddress,municipality, city, province, zipCode, medicalComplications, patientClassification, typeOfService) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)";
            PreparedStatement pstmt = con.prepareStatement(sql);
            
            pstmt.setString(1, fnameinput);
            pstmt.setString(2, lnameinput);
            pstmt.setString(3, minitialinput);
            pstmt.setString(4, ageinput);
            pstmt.setString(5, genderinput);
            pstmt.setString(6, streetaddressinput);
            pstmt.setString(7, municipalityinput);
            pstmt.setString(8, cityinput);
            pstmt.setString(9, provinceinput);
            pstmt.setString(10, zipcodeinput);
            pstmt.setString(11, medicalcomplicationsinput);
            pstmt.setString(12, patientclassificationinput);
            pstmt.setString(13, typeofserviceinput);

            int rowsInserted = pstmt.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(this, "Patient Details Successfully");
                patient_fillup_form_frm patientFill = new patient_fillup_form_frm();
                patientFill.show();
                dispose();
            } else {
                JOptionPane.showMessageDialog(this, "Error in Adding Patient Details. Try Again Later.");
                return;
            }
            
            
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        
        
    }//GEN-LAST:event_submitbtnActionPerformed

    private void aboutbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutbtnActionPerformed
        // TODO add your handling code here:
        patient_dashboard_frm patientDashboard = new patient_dashboard_frm();
        patientDashboard.show();
        dispose();
    }//GEN-LAST:event_aboutbtnActionPerformed

    private void fillupbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fillupbtnActionPerformed
        // TODO add your handling code here:
        patient_fillup_form_frm patientFill = new patient_fillup_form_frm();
        patientFill.show();
        dispose();
    }//GEN-LAST:event_fillupbtnActionPerformed

    private void logoutbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutbtnActionPerformed
        // TODO add your handling code here:
        login_frm_patient patientLogin = new login_frm_patient();
        patientLogin.show();
        dispose();
    }//GEN-LAST:event_logoutbtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(patient_fillup_form_frm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(patient_fillup_form_frm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(patient_fillup_form_frm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(patient_fillup_form_frm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new patient_fillup_form_frm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aboutbtn;
    private javax.swing.JTextField agetxt;
    private javax.swing.JLabel bg;
    private javax.swing.JTextField citytxt;
    private javax.swing.JButton fillupbtn;
    private javax.swing.JTextField fnametxt;
    private javax.swing.JComboBox<String> gendercb;
    private javax.swing.JTextField lnametxt;
    private javax.swing.JButton logoutbtn;
    private javax.swing.JTextField medicalcomplicationstxt;
    private javax.swing.JTextField minitialtxt;
    private javax.swing.JTextField municipalitytxt;
    private javax.swing.JComboBox<String> patientclassificationcb;
    private javax.swing.JTextField provincetxt;
    private javax.swing.JTextField streetaddresstxt;
    private javax.swing.JButton submitbtn;
    private javax.swing.JTextField typeofservicetxt;
    private javax.swing.JTextField zipcodetxt;
    // End of variables declaration//GEN-END:variables
}
