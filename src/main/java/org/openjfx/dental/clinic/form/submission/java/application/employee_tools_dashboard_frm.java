/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package org.openjfx.dental.clinic.form.submission.java.application;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static org.openjfx.dental.clinic.form.submission.java.application.login_frm_patient.driver;
import static org.openjfx.dental.clinic.form.submission.java.application.login_frm_patient.password;
import static org.openjfx.dental.clinic.form.submission.java.application.login_frm_patient.url;
import static org.openjfx.dental.clinic.form.submission.java.application.login_frm_patient.username;

/**
 *
 * @author User
 */
public class employee_tools_dashboard_frm extends javax.swing.JFrame {

    /**
     * Creates new form employee_tools_dashboard_frm
     */
    public employee_tools_dashboard_frm() {
        initComponents();
        tableupdate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dashboardbtn = new javax.swing.JButton();
        employeetoolsbtn = new javax.swing.JButton();
        logoutbtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        patienttable = new javax.swing.JTable();
        editbtn = new javax.swing.JButton();
        deletebtn = new javax.swing.JButton();
        bg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1280, 832));
        setMinimumSize(new java.awt.Dimension(1280, 832));
        setPreferredSize(new java.awt.Dimension(1280, 832));
        setResizable(false);
        getContentPane().setLayout(null);

        dashboardbtn.setBackground(new java.awt.Color(75, 148, 242));
        dashboardbtn.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        dashboardbtn.setForeground(new java.awt.Color(255, 255, 255));
        dashboardbtn.setText("Dashboard");
        dashboardbtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        dashboardbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dashboardbtnActionPerformed(evt);
            }
        });
        getContentPane().add(dashboardbtn);
        dashboardbtn.setBounds(22, 162, 182, 46);

        employeetoolsbtn.setBackground(new java.awt.Color(75, 148, 242));
        employeetoolsbtn.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        employeetoolsbtn.setForeground(new java.awt.Color(255, 255, 255));
        employeetoolsbtn.setText("Employee Tools");
        employeetoolsbtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        employeetoolsbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employeetoolsbtnActionPerformed(evt);
            }
        });
        getContentPane().add(employeetoolsbtn);
        employeetoolsbtn.setBounds(22, 243, 182, 46);

        logoutbtn.setBackground(new java.awt.Color(75, 148, 242));
        logoutbtn.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        logoutbtn.setForeground(new java.awt.Color(255, 255, 255));
        logoutbtn.setText("Logout");
        logoutbtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        logoutbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutbtnActionPerformed(evt);
            }
        });
        getContentPane().add(logoutbtn);
        logoutbtn.setBounds(36, 670, 155, 46);

        patienttable.setBackground(new java.awt.Color(183, 247, 251));
        patienttable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Patient ID", "Fname", "Lname", "Minitial", "Gender", "Complications", "Classification", "Service"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        patienttable.setRowHeight(60);
        jScrollPane1.setViewportView(patienttable);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(280, 40, 960, 510);

        editbtn.setBackground(new java.awt.Color(75, 148, 242));
        editbtn.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        editbtn.setForeground(new java.awt.Color(255, 255, 255));
        editbtn.setText("Edit");
        editbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editbtnActionPerformed(evt);
            }
        });
        getContentPane().add(editbtn);
        editbtn.setBounds(485, 610, 260, 50);

        deletebtn.setBackground(new java.awt.Color(255, 0, 0));
        deletebtn.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        deletebtn.setForeground(new java.awt.Color(255, 255, 255));
        deletebtn.setText("Delete");
        deletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebtnActionPerformed(evt);
            }
        });
        getContentPane().add(deletebtn);
        deletebtn.setBounds(770, 610, 260, 50);

        bg.setIcon(new javax.swing.ImageIcon("C:\\Users\\User\\Documents\\NetBeansProjects\\dental-clinic-form-submission-java-application\\src\\dentalclinic-bg-frms\\employee-tools-dashboard-frm.png")); // NOI18N
        getContentPane().add(bg);
        bg.setBounds(0, 0, 1280, 832);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void tableupdate() {
        int c;

        try {
            Class.forName(driver);
            Connection con = DriverManager.getConnection(url, username, password);
            String sql = "SELECT * FROM patient ORDER BY fname";

            PreparedStatement pst = con.prepareStatement(sql);

            ResultSet rs = pst.executeQuery();

            ResultSetMetaData rsd = rs.getMetaData();
            c = rsd.getColumnCount();
            DefaultTableModel dft = (DefaultTableModel) patienttable.getModel();
            dft.setRowCount(0);

            while (rs.next()) {

                Vector v2 = new Vector();
                for (int i = 1; i <= c; i++) {
                    v2.add(rs.getString("patientId"));
                    v2.add(rs.getString("fname"));
                    v2.add(rs.getString("lname"));
                    v2.add(rs.getString("minitial"));
                    v2.add(rs.getString("gender"));
                    v2.add(rs.getString("medicalComplications"));
                    v2.add(rs.getString("patientClassification"));
                    v2.add(rs.getString("typeOfService"));

                }
                dft.addRow(v2);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void dashboardbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dashboardbtnActionPerformed
        // TODO add your handling code here:
        employee_dashboard_frm employeeDashboard = new employee_dashboard_frm();
        employeeDashboard.show();
        dispose();
    }//GEN-LAST:event_dashboardbtnActionPerformed

    private void employeetoolsbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employeetoolsbtnActionPerformed
        // TODO add your handling code here:
        employee_tools_dashboard_frm employeeTools = new employee_tools_dashboard_frm();
        employeeTools.show();
        dispose();
    }//GEN-LAST:event_employeetoolsbtnActionPerformed

    private void logoutbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutbtnActionPerformed
        // TODO add your handling code here:
        login_frm_employee loginFrm = new login_frm_employee();
        loginFrm.show();
        dispose();
    }//GEN-LAST:event_logoutbtnActionPerformed

    private void editbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editbtnActionPerformed
        // TODO add your handling code here:
        try {
            if (patienttable.isEditing()) {
                patienttable.getCellEditor().stopCellEditing();
            }
            
            int selectedRow = patienttable.getSelectedRow();
            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(this, "Please select a row to edit.");
                return;
            }

            String patientId = patienttable.getValueAt(selectedRow, 0).toString(); 
            String fname = patienttable.getValueAt(selectedRow, 1).toString();
            String lname = patienttable.getValueAt(selectedRow, 2).toString();
            String minitial = patienttable.getValueAt(selectedRow, 3).toString();
            String gender = patienttable.getValueAt(selectedRow, 4).toString();
            String medicalComplications = patienttable.getValueAt(selectedRow, 5).toString();
            String patientClassification = patienttable.getValueAt(selectedRow, 6).toString();
            String typeOfService = patienttable.getValueAt(selectedRow, 7).toString();

            Class.forName(driver);
            Connection con = DriverManager.getConnection(url, username, password);

            String sql = "UPDATE patient SET fname = ?, lname = ?, minitial = ?, gender = ?, medicalComplications = ?, patientClassification = ?, typeOfService = ? WHERE patientId = ?";
            PreparedStatement pst = con.prepareStatement(sql);

            pst.setString(1, fname);
            pst.setString(2, lname);
            pst.setString(3, minitial);
            pst.setString(4, gender);
            pst.setString(5, medicalComplications);
            pst.setString(6, patientClassification);
            pst.setString(7, typeOfService);
            pst.setString(8, patientId);

            int updatedRows = pst.executeUpdate();

            if (updatedRows > 0) {
                JOptionPane.showMessageDialog(this, "Record updated successfully.");
            } else {
                JOptionPane.showMessageDialog(this, "Failed to update record.");
            }

            tableupdate();

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "An error occurred while updating the record.");
        }
    }//GEN-LAST:event_editbtnActionPerformed

    private void deletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebtnActionPerformed
        // TODO add your handling code here:
        try {
            
            int selectedRow = patienttable.getSelectedRow();
            if (selectedRow == -1){
                JOptionPane.showMessageDialog(this, "Please Select a Row to Delete.");
                return;
            }
            
            int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this record?", "Confirm Delete", JOptionPane.YES_NO_CANCEL_OPTION);
            if (confirm != JOptionPane.YES_OPTION){
                return;
            }
            
            String patientId = patienttable.getValueAt(selectedRow, 0).toString();
            
            Class.forName(driver);
            Connection con = DriverManager.getConnection(url, username, password);
            
            String sql = "DELETE FROM patient WHERE patientId = ?";
            PreparedStatement pst = con.prepareStatement(sql);
            
            pst.setString(1, patientId);
            
            int deletedRows = pst.executeUpdate();
            
            if (deletedRows > 0){
                JOptionPane.showMessageDialog(this, "Patient Record Deleted Successfully");
                
                DefaultTableModel dft = (DefaultTableModel) patienttable.getModel();
                dft.removeRow(selectedRow);
            } else {
                JOptionPane.showMessageDialog(this, "Failed to Delete Patient Record");
            }
            
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "An error occured while deleting patient record.");
        }
    }//GEN-LAST:event_deletebtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(employee_tools_dashboard_frm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(employee_tools_dashboard_frm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(employee_tools_dashboard_frm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(employee_tools_dashboard_frm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new employee_tools_dashboard_frm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bg;
    private javax.swing.JButton dashboardbtn;
    private javax.swing.JButton deletebtn;
    private javax.swing.JButton editbtn;
    private javax.swing.JButton employeetoolsbtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton logoutbtn;
    private javax.swing.JTable patienttable;
    // End of variables declaration//GEN-END:variables
}
