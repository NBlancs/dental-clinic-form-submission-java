/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package org.openjfx.dental.clinic.form.submission.java.application;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import static org.openjfx.dental.clinic.form.submission.java.application.login_frm_patient.driver;
import static org.openjfx.dental.clinic.form.submission.java.application.login_frm_patient.password;
import static org.openjfx.dental.clinic.form.submission.java.application.login_frm_patient.url;
import static org.openjfx.dental.clinic.form.submission.java.application.login_frm_patient.username;

/**
 *
 * @author User
 */
public class employee_dashboard_frm extends javax.swing.JFrame {

    /**
     * Creates new form employee_dashboard_frm
     */
    public employee_dashboard_frm() {
        initComponents();
        tableupdate();
        patientCounter();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        patienttable = new javax.swing.JTable();
        dashboardbtn = new javax.swing.JButton();
        employeetoolsbtn = new javax.swing.JButton();
        logoutbtn = new javax.swing.JButton();
        totalpatient = new javax.swing.JLabel();
        bg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1280, 832));
        setMinimumSize(new java.awt.Dimension(1280, 832));
        setPreferredSize(new java.awt.Dimension(1280, 832));
        setResizable(false);
        getContentPane().setLayout(null);

        patienttable.setBackground(new java.awt.Color(183, 247, 251));
        patienttable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Patient ID", "Fname", "Lname", "Minitial", "Gender", "Complications", "Classification", "Service"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        patienttable.setRowHeight(60);
        jScrollPane1.setViewportView(patienttable);
        if (patienttable.getColumnModel().getColumnCount() > 0) {
            patienttable.getColumnModel().getColumn(0).setResizable(false);
            patienttable.getColumnModel().getColumn(1).setResizable(false);
            patienttable.getColumnModel().getColumn(2).setResizable(false);
            patienttable.getColumnModel().getColumn(3).setResizable(false);
            patienttable.getColumnModel().getColumn(4).setResizable(false);
            patienttable.getColumnModel().getColumn(5).setResizable(false);
            patienttable.getColumnModel().getColumn(6).setResizable(false);
            patienttable.getColumnModel().getColumn(7).setResizable(false);
        }

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(280, 250, 960, 510);

        dashboardbtn.setBackground(new java.awt.Color(75, 148, 242));
        dashboardbtn.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        dashboardbtn.setForeground(new java.awt.Color(255, 255, 255));
        dashboardbtn.setText("Dashboard");
        dashboardbtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        dashboardbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dashboardbtnActionPerformed(evt);
            }
        });
        getContentPane().add(dashboardbtn);
        dashboardbtn.setBounds(22, 162, 182, 46);

        employeetoolsbtn.setBackground(new java.awt.Color(75, 148, 242));
        employeetoolsbtn.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        employeetoolsbtn.setForeground(new java.awt.Color(255, 255, 255));
        employeetoolsbtn.setText("Employee Tools");
        employeetoolsbtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        employeetoolsbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employeetoolsbtnActionPerformed(evt);
            }
        });
        getContentPane().add(employeetoolsbtn);
        employeetoolsbtn.setBounds(22, 243, 182, 46);

        logoutbtn.setBackground(new java.awt.Color(75, 148, 242));
        logoutbtn.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        logoutbtn.setForeground(new java.awt.Color(255, 255, 255));
        logoutbtn.setText("Logout");
        logoutbtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        logoutbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutbtnActionPerformed(evt);
            }
        });
        getContentPane().add(logoutbtn);
        logoutbtn.setBounds(36, 670, 155, 46);

        totalpatient.setFont(new java.awt.Font("Segoe UI", 0, 72)); // NOI18N
        totalpatient.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totalpatient.setText("0");
        totalpatient.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        getContentPane().add(totalpatient);
        totalpatient.setBounds(280, 70, 960, 140);

        bg.setIcon(new javax.swing.ImageIcon("C:\\Users\\User\\Documents\\NetBeansProjects\\dental-clinic-form-submission-java-application\\src\\dentalclinic-bg-frms\\employee-dashboard-frm.png")); // NOI18N
        getContentPane().add(bg);
        bg.setBounds(0, 0, 1280, 832);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void tableupdate() {
        int c;
        
        try {
            Class.forName(driver);
            Connection con = DriverManager.getConnection(url,username,password);
            String sql = "SELECT * FROM patient ORDER BY fname";
            
            PreparedStatement pst = con.prepareStatement(sql);
            
            ResultSet rs = pst.executeQuery();
            
            ResultSetMetaData rsd = rs.getMetaData();
            c = rsd.getColumnCount();
            DefaultTableModel dft = (DefaultTableModel) patienttable.getModel();
            dft.setRowCount(0);
            
            while (rs.next()){
                
                Vector v2 = new Vector();
                for (int i = 1; i <= c; i++){
                    v2.add(rs.getString("patientId"));
                    v2.add(rs.getString("fname"));
                    v2.add(rs.getString("lname"));
                    v2.add(rs.getString("minitial"));
                    v2.add(rs.getString("gender"));
                    v2.add(rs.getString("medicalComplications"));
                    v2.add(rs.getString("patientClassification"));
                    v2.add(rs.getString("typeOfService"));

                }
                dft.addRow(v2);
            }                                
        } catch (Exception e) {
            e.printStackTrace();
        }             
    }
    
    
    public void patientCounter(){
       try {
            Class.forName(driver);
            Connection con = DriverManager.getConnection(url, username, password);
            
            PreparedStatement pst = con.prepareStatement("SELECT COUNT(fname) AS patientCount FROM patient");
            ResultSet rs = pst.executeQuery();
            
            if (rs.next()){
                int patientCount = rs.getInt("patientCount");
                totalpatient.setText(String.valueOf(patientCount));
            } else {
                totalpatient.setText("0");
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    
    }
    
    private void dashboardbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dashboardbtnActionPerformed
        // TODO add your handling code here:
        employee_dashboard_frm employeeDashboard = new employee_dashboard_frm();
        employeeDashboard.show();
        dispose();
    }//GEN-LAST:event_dashboardbtnActionPerformed

    private void employeetoolsbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employeetoolsbtnActionPerformed
        // TODO add your handling code here:
        employee_tools_dashboard_frm employeeTools = new employee_tools_dashboard_frm();
        employeeTools.show();
        dispose();
    }//GEN-LAST:event_employeetoolsbtnActionPerformed

    private void logoutbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutbtnActionPerformed
        // TODO add your handling code here:
        login_frm_employee loginFrm = new login_frm_employee();
        loginFrm.show();
        dispose();
    }//GEN-LAST:event_logoutbtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(employee_dashboard_frm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(employee_dashboard_frm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(employee_dashboard_frm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(employee_dashboard_frm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new employee_dashboard_frm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bg;
    private javax.swing.JButton dashboardbtn;
    private javax.swing.JButton employeetoolsbtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton logoutbtn;
    private javax.swing.JTable patienttable;
    private javax.swing.JLabel totalpatient;
    // End of variables declaration//GEN-END:variables
}
